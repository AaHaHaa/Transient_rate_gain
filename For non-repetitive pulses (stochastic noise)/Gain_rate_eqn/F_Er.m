function dNdt = F_Er(N,N_total,A,Gamma,kijkl,R)
%F_ER Population coupled equations among Er's energy levels
%
% 1. Morkel and Laming, "Theoretical modeling of erbium-doped fiber
%    amplifiers with excited-state absorption," Opt. Lett. 14(19), 1062-
%    1064 (1989)
% 2. Maciuc et al., "Rate equations for an erbium laser system: a numerical
%    approach," ROMOPTO 2000: Sixth Conference on Optics 4430, 136-146
%    (2001)
% 3. Henderson-Sapir et al., "New energy-transfer upconversion process in 
%    Er3+:ZBLAN mid-infrared fiber lasers," Opt. Express 24, 6869-6883 
%    (2016)
% 4. Jian-Feng Li and Stuart D. jackson, "Theoretical study and
%    optimization of a high power mid-infrared erbium-doped ZBLAN fibre 
%    laser," Chin. Phys. B 20(3), 034205 (2011)
% 5. Cai et al., "Numerical Analysis of a Dual-Wavelength-Clad-Pumped 3.5
%    Î¼m Erbium-Doped Fluoride Fiber Laser," Appl. Sciences 12(15) (2022)
% 6. Pele et al., "Wavelength conversion in Er^3+ doped chalcogenide fibers
%    for optical gas sensors," Opt. Express 23(4), 4163-4172 (2015)
%
% Input arguments:
%   N: population; (Nt,8)
%   N_total: total population; a scalar
%   A: spontaneous transition rate/probabilities; a (9,9) matrix
%   Gamma: multiphonon decay rates; a (8,1) vector
%   kijkl: nonlinear coupling coefficients for upconversion or cross relaxation effects; a (1,4) vector
%   R: photon rate; (Nt,num_cross_sections), num_cross_sections = 15
%
% Output argument:
%   dNdt: variation of populations; (Nt,num_levels-1), num_levels = 9

% Populations of each energy level
N0 = N_total - sum(N,2); % ground state, 4I15/2
N1 = N(:,1); % 4I13/2
N2 = N(:,2); % 4I11/2
N3 = N(:,3); % 4I9/2
N4 = N(:,4); % 4F9/2
N5 = N(:,5); % 4S3/2 + 2H11/2
N6 = N(:,6); % 4F7/2
N7 = N(:,7); % 4F5/2
N8 = N(:,8); % 2H9/2

% Nonlinear coupling coefficients
k1103 = kijkl(1);
k2206 = kijkl(2);
k5031 = kijkl(3);
k4251 = kijkl(4);

% Stimulated photon rates (absorption and emission)
wa08 = R(:,1);
wa07 = R(:,2);
wa06 = R(:,3);
wa05 = R(:,4);
wa04 = R(:,5);
wa03 = R(:,6);
wa02 = R(:,7);
wa01 = R(:,8);
wa15 = R(:,9);
wa26 = R(:,10);
wa12 = R(:,11);
wa23 = R(:,12);
we10 = R(:,13);
we21 = R(:,14);
we32 = R(:,15);

% Variation of populations
% dN0 + dN1 + dN2 + dN3 + dN4 + dN5 + dN6 + dN7 + dN8 = dN_total = 0
%dN0dt = A(2,1)*N1+A(3,1)*N2+A(4,1)*N3+A(5,1)*N4+A(6,1)*N5+A(7,1)*N6+A(8,1)*N7+A(9,1)*N8 ...
%        + Gamma(1)*N1 ...
%        + we10.*N1 ...
%        - (wa01 + wa02 + wa03 + wa04 + wa05 + wa06 + wa07 + wa08).*N0 ...
%        + k1103*N1.^2 + k2206*N2.^2 - k5031*N0.*N5;
dN1dt = A(3,2)*N2+A(4,2)*N3+A(5,2)*N4+A(6,2)*N5+A(7,2)*N6+A(8,2)*N7+A(9,2)*N8 ...
        + Gamma(2)*N2 ...
        - (A(2,1) + Gamma(1))*N1 ...
        - we10.*N1 + we21.*N2 ...
        + wa01.*N0 - (wa12 + wa15).*N1 ...
        - 2*k1103*N1.^2 + k4251*N2.*N4 + k5031*N0.*N5;
dN2dt = A(4,3)*N3+A(5,3)*N4+A(6,3)*N5+A(7,3)*N6+A(8,3)*N7+A(9,3)*N8 ...
        + Gamma(3)*N3 ...
        - (A(3,1) + A(3,2) + Gamma(2))*N2 ...
        + we32.*N3 - we21.*N2 ...
        + wa02.*N0 + wa12.*N1 - wa23.*N2 - wa26.*N2 ...
        - 2*k2206*N2.^2 - k4251*N2.*N4;
dN3dt = A(5,4)*N4+A(6,4)*N5+A(7,4)*N6+A(8,4)*N7+A(9,4)*N8 ...
        + Gamma(4)*N4 ...
        - (A(4,1) + A(4,2) + A(4,3) + Gamma(3))*N3 ...
        - we32.*N3 ...
        + wa03.*N0 + wa23.*N2 ...
        + k1103*N1.^2 + k5031*N0.*N5;
dN4dt = A(6,5)*N5+A(7,5)*N6+A(8,5)*N7+A(9,5)*N8 ...
        + Gamma(5)*N5 ...
        - (A(5,1) + A(5,2) + A(5,3) + A(5,4) + Gamma(4))*N4 ...
        + wa04.*N0 ...
        - k4251*N2.*N4;
dN5dt = A(7,6)*N6+A(8,6)*N7+A(9,6)*N8 ...
        + Gamma(6)*N6 ...
        - (A(6,1) + A(6,2) + A(6,3) + A(6,4) + A(6,5) + Gamma(5))*N5 ...
        + wa05.*N0 + wa15.*N1 ...
        + k4251*N2.*N4- k5031*N0.*N5;
dN6dt = A(8,7)*N7+A(9,7)*N8 ...
        + Gamma(7)*N7 ...
        - (A(7,1) + A(7,2) + A(7,3) + A(7,4) + A(7,5) + A(7,6) + Gamma(6))*N6 ...
        + wa06.*N0 + wa26.*N2 ...
        + k2206*N2.^2;
dN7dt = A(9,8)*N8 ...
        + Gamma(8)*N8 ...
        - (A(8,1) + A(8,2) + A(8,3) + A(8,4) + A(8,5) + A(8,6) + A(8,7) + Gamma(7))*N7 ...
        + wa07.*N0;
dN8dt = - (A(9,1) + A(9,2) + A(9,3) + A(9,4) + A(9,5) + A(9,6) + A(9,7) + A(9,8) + Gamma(8))*N8 ...
        + wa08.*N0;

dNdt = cat(2,dN1dt,dN2dt,dN3dt,dN4dt,dN5dt,dN6dt,dN7dt,dN8dt);

end